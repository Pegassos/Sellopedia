@model Sellopedia.Models.Review


@using (Html.BeginForm("CreateReview", "Shop", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>
        <style>
		    .rating {
		      unicode-bidi: bidi-override;
		      direction: rtl;
		      text-align: center;
		    }
		    .rating > span {
		      display: inline-block;
		      position: relative;
		      width: 1.1em;
		    }
		    .rating > span:hover,
		    .rating > span:hover ~ span {
		      color: transparent;
              cursor: pointer;
		    }
		    .rating > span:hover:before,
		    .rating > span:hover ~ span:before {
		       content: "\2605";
		       position: absolute;
		       left: 0;
		       color: gold;
		    }
	    </style>

        <div class="form-group">
            <div class="col-md-10">
                <div class="rating">
                    <span class="star" id="5">☆</span><span class="star" id="4">☆</span><span class="star" id="3">☆</span><span class="star" id="2">☆</span><span class="star" id="1">☆</span>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

