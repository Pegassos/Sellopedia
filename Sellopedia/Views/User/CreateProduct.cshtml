@model Sellopedia.Models.ProductViewModel

@{
    ViewBag.Title = "CreateProduct";
}

<!-- ============================ OLD Page  ================================= -->

@*<h2>CreateProduct</h2>
@using (Html.BeginForm("CreateProduct", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "Id", "Name"), "Select Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProductImages, "", new { @type = "file", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.ProductImages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OriginalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginalPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "MyProducts")
</div>*@

<!-- ============================ OLD Page end ================================= -->


<!-- ============================ COMPONENT REGISTER  ================================= -->

@using (Html.BeginForm("CreateProduct", "User", FormMethod.Post, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="card mx-auto" style="max-width:520px; margin-top:40px;">
        <article class="card-body">
            <header class="mb-4"><h4 class="card-title">Create Product</h4></header>
            <form>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-row">
                    <div class="col form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div> <!-- form-group end.// -->
                    <div class="col form-group">
                        @Html.LabelFor(model => model.CategoryId)
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "Id", "Name"), "Select Category", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div> <!-- form-group end.// -->
                </div> <!-- form-row end.// -->

                <div class="form-row">
                    <div class="col-md-10 form-group">
                        @Html.LabelFor(model => model.Description)
                        @Html.TextAreaFor(model => model.Description, 4, 58, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div> <!-- form-group end.// -->
                </div>

                <div class="form-row">
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(model => model.OriginalPrice)
                        @Html.EditorFor(model => model.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OriginalPrice, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(model => model.DiscountPrice)
                        @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(model => model.Quantity)
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-row">
                    <div class="col-md-10 form-group">
                        <img src="https://img.icons8.com/material-outlined/24/000000/add-image.png" />
                        @Html.LabelFor(model => model.ProductImages)
                        @Html.TextBoxFor(model => model.ProductImages, "", new { @type = "file", @multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.ProductImages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary col-md-5"> Create Product</button>
                    <button onclick="location.href='@Url.Action("MyProducts", "User")'" class="btn btn-primary col-md-6" type="button">Back to Products List</button>
                </div> <!-- form-group// -->

            </form>
        </article><!-- card-body.// -->
    </div> <!-- card.// -->
    <br>
    <br>
}

<!-- ============================ COMPONENT REGISTER END  ================================= -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
